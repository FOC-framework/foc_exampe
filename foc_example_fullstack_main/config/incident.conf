input {
    jdbc {
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://192.168.1.2:5432/fenix"
        # The user we wish to execute our statement as
        jdbc_user => "postgres"
  jdbc_password => "POSTGRES_PASSWORD"
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.2.8.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        # our query
        #statement => 'SELECT * from incident_view'
        jdbc_validate_connection => true
        schedule => "* * * * *"

        statement => "SELECT * FROM incident_view WHERE incident_ref > ? AND incident_ref < ? + ? ORDER BY incident_ref ASC"
        prepared_statement_bind_values => [":sql_last_value", ":sql_last_value", 20000]
        prepared_statement_name => "incident"
        use_prepared_statements => true
        use_column_value => true
        tracking_column_type => "numeric"
        tracking_column => "incident_ref"
        last_run_metadata_path => "/etc/logstash/cursors/incident_last_value.yml"

    }
}

# filter {
#   mutate {convert => ["lng", "float"]}
#   mutate {convert => ["lat", "float"]}
#   mutate {
#     rename => {"lng" => "[location][lon]"}
#     rename => {"lat" => "[location][lat]"}
#   }
# }

output {
  elasticsearch {
    hosts => "localhost:9200"
    index => "incident_data"
    user => "elastic"
    password => "ELASTIC_PASSWORD"
    document_id => "%{incident_ref}"
  }
}
