input {
    jdbc {
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://192.168.1.2:5432/fenix"
        # The user we wish to execute our statement as
        jdbc_user => "postgres"
        jdbc_password => ""
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/postgresql-42.2.8.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_validate_connection => true
        schedule => "* * * * *"
        # our query
        statement => "SELECT * FROM aid_delivery_view WHERE aid_delivery_ref > ? AND aid_delivery_ref < ? + ? ORDER BY aid_delivery_ref ASC"
        prepared_statement_bind_values => [":sql_last_value", ":sql_last_value", 20000]
        prepared_statement_name => "aid_delivery"
        use_prepared_statements => true
        use_column_value => true
        tracking_column_type => "numeric"
        tracking_column => "aid_delivery_ref"
        last_run_metadata_path => "/etc/logstash/cursors/aid_delivery_last_value.yml"
    }
}

filter {
  mutate {convert => ["aid_delivery_lng", "float"]}
  mutate {convert => ["aid_delivery_lat", "float"]}
  mutate {
    rename => {"aid_delivery_lng" => "[aid_delivery_location][lon]"}
    rename => {"aid_delivery_lat" => "[aid_delivery_location][lat]"}
  }
}

output {
  elasticsearch {
    hosts => "localhost:9200"
    index => "aid_delivery_data"
    user => "elastic"
    password => "${ES_PWD}"
    document_id => "%{aid_delivery_ref}"
  }
}

